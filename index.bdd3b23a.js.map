{"mappings":"ACEA,IAAM,EAAe,SAAS,gBAAgB,CAAC,MACzC,EAAO,SAAS,gBAAgB,CAAC,YAEvC,EAAa,OAAO,CAAC,SAAC,CAAA,CAAQ,CAA9B,EACE,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,IAAM,EAAY,MAAM,IAAI,CAAC,GAE7B,EAAU,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtB,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAM,CAAC,WAAW,CACrC,EAAQ,EAAK,KAAK,CAAC,EAAM,CAAC,WAAW,QAE3C,AAAI,AAAU,IAAV,EAIK,AAHS,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,QAAS,KAI3C,MAAM,GAAS,EAAM,aAAa,CAAC,GAAS,EAAQ,CAE/D,GAEA,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,GAElB,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAM,WAAW,CAAC,EACpB,EACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tableHeaders = document.querySelectorAll(\"th\");\nvar rows = document.querySelectorAll(\"tbody tr\");\ntableHeaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function(e) {\n        var rowsArray = Array.from(rows);\n        rowsArray.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[index].textContent;\n            var cellB = rowB.cells[index].textContent;\n            if (index === 3) {\n                var salaryA = parseFloat(cellA.replace(/[$,]/g, \"\"));\n                var salaryB = parseFloat(cellB.replace(/[$,]/g, \"\"));\n                return salaryA - salaryB;\n            } else return isNaN(cellA) ? cellA.localeCompare(cellB) : cellA - cellB;\n        });\n        var tbody = document.querySelector(\"tbody\");\n        tbody.innerHTML = \"\";\n        rowsArray.forEach(function(row) {\n            tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.bdd3b23a.js.map\n","'use strict';\n\nconst tableHeaders = document.querySelectorAll('th');\nconst rows = document.querySelectorAll('tbody tr');\n\ntableHeaders.forEach((header, index) => {\n  header.addEventListener('click', (e) => {\n    const rowsArray = Array.from(rows);\n\n    rowsArray.sort((rowA, rowB) => {\n      const cellA = rowA.cells[index].textContent;\n      const cellB = rowB.cells[index].textContent;\n\n      if (index === 3) {\n        const salaryA = parseFloat(cellA.replace(/[$,]/g, ''));\n        const salaryB = parseFloat(cellB.replace(/[$,]/g, ''));\n\n        return salaryA - salaryB;\n      } else {\n        return isNaN(cellA) ? cellA.localeCompare(cellB) : cellA - cellB;\n      }\n    });\n\n    const tbody = document.querySelector('tbody');\n\n    tbody.innerHTML = '';\n\n    rowsArray.forEach((row) => {\n      tbody.appendChild(row);\n    });\n  });\n});\n"],"names":["tableHeaders","document","querySelectorAll","rows","forEach","header","index","addEventListener","e","rowsArray","Array","from","sort","rowA","rowB","cellA","cells","textContent","cellB","salaryA","parseFloat","replace","isNaN","localeCompare","tbody","querySelector","innerHTML","row","appendChild"],"version":3,"file":"index.bdd3b23a.js.map"}